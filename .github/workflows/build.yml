name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup vcpkg
        run: |
          git clone https://github.com/Microsoft/vcpkg.git -b 566f9496b7e00ee0cc00aca0ab90493d122d148a
          ./vcpkg/bootstrap-vcpkg.sh

      - name: Install dependencies
        run: ./${{github.workspace}}/vcpkg/vcpkg install

      - name: Create Release Package
        if: matrix.os == 'windows-latest'
        run: |
          $version = $env:GITHUB_REF -replace 'refs/tags/v', ''
          Compress-Archive -Path ${{github.workspace}}/vcpkg_installed -DestinationPath vcpkg_installed_${{ matrix.os }}.zip

      - name: Create Release Package (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          version=${GITHUB_REF#refs/tags/v}
          zip -r vcpkg_installed_${{ matrix.os }}.zip vcpkg_installed/

      - name: Create Release Package (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          version=${GITHUB_REF#refs/tags/v}
          zip -r vcpkg_installed_${{ matrix.os }}.zip vcpkg_installed/

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: vcpkg_installed_${{ matrix.os }}.zip
          asset_name: vcpkg_installed_${{ matrix.os }}
          asset_content_type: application/zip 
